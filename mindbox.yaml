apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-app
spec:
  replicas: 4
  selector:
    matchLabels:
      app: web-app
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0 # Максимальная доступность при обновлениях
  template:
    metadata:
      labels:
        app: web-app
    spec:
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone # Распределение по зонам
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app: web-app
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname # Распределение по нодам
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app: web-app
      containers:
      - name: web-app
        image: your-web-app-image
        resources:
          requests:
            memory: "128Mi"
            cpu: "0.1" # Минимальный запрос после инициализации
          limits:
            memory: "128Mi"
            cpu: "0.5" # Лимит для пиковых нагрузок
        startupProbe: # Для длительной инициализации
          httpGet:
            path: /health
            port: 80
          failureThreshold: 10 # 10 попыток × 1 сек = 10 секунд
          periodSeconds: 1
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          periodSeconds: 10
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: web-app-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: web-app
  minReplicas: 1 # Минимум ночью
  maxReplicas: 6 # Максимум днем
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300 # 5 минут стабилизации перед уменьшением
      policies:
      - type: Percent
        value: 50 # Уменьшаем не более чем на 50% за раз
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100 # Можем удвоить количество подов при резком росте нагрузки
        periodSeconds: 15
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70 # Целевая загрузка CPU
  - type: External
    external:
      metric:
        name: requests_per_second # Дополнительно масштабируем по RPS
        selector:
          matchLabels:
            app: web-app
      target:
        type: AverageValue
        averageValue: 1000 # 1000 запросов в секунду на под
